//《数据结构与算法（Java版）（第5版）》，作者：叶核亚，2019年8月12日
//§7.2.2  图的邻接矩阵存储结构和实现
//§7.2.3  图的邻接表存储结构和实现
//§7.3   图的遍历
//§7.5.1   非负权值的单源最短路径（Dijkstra算法）
package data.PicGraph;

import data.Matrix.Triple;

public class G4d
{
    public static void main(String args[])
    {
        String[] vertexes={"A","B","C","D","E"};
        Triple[] edges={new Triple(0,1,10), new Triple(0,3,30), new Triple(0,4,99),
                        new Triple(1,2,50), new Triple(1,3,40),
                        new Triple(2,4,10), new Triple(3,2,20), new Triple(3,4,60)};
        MatrixGraph<String> graph = new MatrixGraph<String>(vertexes, edges);//图7.14
        String edgestr="(0,1,10),(0,3,30),(0,4,99),(1,2,50),(1,3,40),(2,4,10),(3,2,20),(3,4,60)";
//        AdjListGraph<String> graph = new AdjListGraph<String>(vertexes, edgestr);//图7.20(b)
        System.out.print("带权有向图G4，"+graph.toString());

        //§7.3   图的遍历
//        System.out.println("深度优先遍历有向图G4：");
//        for(int i=0;  i<graph.vertexCount();  i++)
//            graph.DFSTraverse(i);
//
//        System.out.println("广度优先遍历有向图G4：");
//        for(int i=0;  i<graph.vertexCount();  i++)
//            graph.BFSTraverse(i);
        
        
        //§7.5.1   非负权值的单源最短路径（Dijkstra算法）
//        System.out.println("带权有向图G4，Dijkstra算法");
//        for(int  i=0; i<graph.vertexCount();  i++)
//            graph.shortestPath(i);               //顶点vi的单源最短路径，Dijkstra算法

        //§7.5.2  以Floyd算法求带权图每对顶点间的最短路径。//习题解答
        System.out.println("带权有向图G4，Floyd算法");
        graph.shortestPath();                    //调用Floyd算法求带权图每对顶点间的最短路径
        
    }
}
/*
程序运行结果如下：
带权有向图G4，顶点集合：(A, B, C, D, E)               //图7.14
邻接矩阵:  
     0    10     ∞    30    99
     ∞     0    50    40     ∞
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    60
     ∞     ∞     ∞     ∞     0

带权有向图G4，顶点集合：(A, B, C, D, E)                //图7.20(b)
出边表：
0 -> ((0,1,10),(0,3,30),(0,4,99))
1 -> ((1,2,50),(1,3,40))
2 -> ((2,4,10))
3 -> ((3,2,20),(3,4,60))
4 -> ()

        //7.3   图的遍历
深度优先遍历有向图G4：
{ A B C E D }
{ B C E D } { A }
{ C E } { D } { A B } 
{ D C E } { A B } 
{ E } { A B C D } 
广度优先遍历有向图G4：
{ A B D E C } 
{ B C D E } { A } 
{ C E } { D } { A B } 
{ D C E } { A B } 
{ E } { A B D C } 

广度优先遍历有向图G4，共用一个队列。
{ A     顶点队列：SeqQueue(0)，front=0，rear=1
  B D E 顶点队列：SeqQueue(1,3,4)，front=1，rear=0
  C     顶点队列：SeqQueue(3,4,2)，front=2，rear=1
                顶点队列：SeqQueue(4,2)，front=3，rear=1
                顶点队列：SeqQueue(2)，front=0，rear=1
}
 
{ B   顶点队列：SeqQueue(1)，front=0，rear=1 
  C D 顶点队列：SeqQueue(2,3)，front=1，rear=3
  E   顶点队列：SeqQueue(3,4)，front=2，rear=0
            顶点队列：SeqQueue(4)，front=3，rear=0
}
{ A   顶点队列：SeqQueue(0)，front=0，rear=1
}

{ C 顶点队列：SeqQueue(2)，front=0，rear=1
  E 顶点队列：SeqQueue(4)，front=1，rear=2
}
{ D 顶点队列：SeqQueue(3)，front=2，rear=3
}
{ A 顶点队列：SeqQueue(0)，front=3，rear=0
  B 顶点队列：SeqQueue(1)，front=0，rear=1
}
 
{ D   顶点队列：SeqQueue(3)，front=0，rear=1              //第5版图7.26
  C E 顶点队列：SeqQueue(2,4)，front=1，rear=3
            顶点队列：SeqQueue(4)，front=2，rear=3
}
{ A   顶点队列：SeqQueue(0)，front=3，rear=0
  B   顶点队列：SeqQueue(1)，front=0，rear=1
} 

{ E   顶点队列：SeqQueue(4)，front=0，rear=1
}
{ A   顶点队列：SeqQueue(0)，front=1，rear=2
  B D 顶点队列：SeqQueue(1,3)，front=2，rear=0
  C   顶点队列：SeqQueue(3,2)，front=3，rear=1
            顶点队列：SeqQueue(2)，front=0，rear=1
} 

        //7.5.1   非负权值的单源最短路径（Dijkstra算法）
带权有向图G4，Dijkstra算法
A的单源最短路径：(A,B)长度10，(A,D,C)长度50，(A,D)长度30，(A,D,C,E)长度60，
B的单源最短路径：(B,A)长度∞，(B,C)长度50，(B,D)长度40，(B,C,E)长度60，
C的单源最短路径：(C,A)长度∞，(C,B)长度∞，(C,D)长度∞，(C,E)长度10，
D的单源最短路径：(D,A)长度∞，(D,B)长度∞，(D,C)长度20，(D,C,E)长度30，
E的单源最短路径：(E,A)长度∞，(E,B)长度∞，(E,C)长度∞，(E,D)长度∞，

vset数组{1,0,0,0,0}	path数组{-1,0,-1,0,0}	dist数组{0,10,∞,30,99}
vset数组{1,1,0,0,0}	path数组{-1,0,1,0,0}	dist数组{0,10,60,30,99}
vset数组{1,1,0,1,0}	path数组{-1,0,3,0,3}	dist数组{0,10,50,30,90}
vset数组{1,1,1,1,0}	path数组{-1,0,3,0,2}	dist数组{0,10,50,30,60}
vset数组{1,1,1,1,1}	path数组{-1,0,3,0,2}	dist数组{0,10,50,30,60}
从顶点A到其他顶点的最短路径如下：
(A,B)长度10，(A,D,C)长度50，(A,D)长度30，(A,D,C,E)长度60

vset数组{0,1,0,0,0}	path数组{-1,-1,1,1,-1}	dist数组{∞,0,50,40,∞}
vset数组{0,1,0,1,0}	path数组{-1,-1,1,1,3}	dist数组{∞,0,50,40,100}
vset数组{0,1,1,1,0}	path数组{-1,-1,1,1,2}	dist数组{∞,0,50,40,60}
vset数组{0,1,1,1,1}	path数组{-1,-1,1,1,2}	dist数组{∞,0,50,40,60}
从顶点B到其他顶点的最短路径如下：
(B,A)长度∞，(B,C)长度50，(B,D)长度40，(B,C,E)长度60

vset数组{0,0,1,0,0}	path数组{-1,-1,-1,-1,2}	dist数组{∞,∞,0,∞,10}
vset数组{0,0,1,0,1}	path数组{-1,-1,-1,-1,2}	dist数组{∞,∞,0,∞,10}
从顶点C到其他顶点的最短路径如下：
(C,A)长度∞，(C,B)长度∞，(C,D)长度∞，(C,E)长度10

vset数组{0,0,0,1,0}	path数组{-1,-1,3,-1,3}	dist数组{∞,∞,20,0,60}
vset数组{0,0,1,1,0}	path数组{-1,-1,3,-1,2}	dist数组{∞,∞,20,0,30}
vset数组{0,0,1,1,1}	path数组{-1,-1,3,-1,2}	dist数组{∞,∞,20,0,30}
从顶点D到其他顶点的最短路径如下：
(D,A)长度∞，(D,B)长度∞，(D,C)长度20，(D,C,E)长度30，

vset数组{0,0,0,0,1}	path数组{-1,-1,-1,-1,-1}	dist数组{∞,∞,∞,∞,0}
从顶点E到其他顶点的最短路径如下：
(E,A)长度为∞，(E,B)长度为∞，(E,C)长度为∞，(E,D)长度为∞


带权有向图G4，Floyd算法
dist：
     0    10     ∞    30    99
     ∞     0    50    40     ∞
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    60
     ∞     ∞     ∞     ∞     0
path：
    -1     0    -1     0     0
    -1    -1     1     1    -1
    -1    -1    -1    -1     2
    -1    -1     3    -1     3
    -1    -1    -1    -1    -1
路径矩阵：
(A,A) (A,B) (A,C) (A,D) (A,E) 
(B,A) (B,B) (B,C) (B,D) (B,E) 
(C,A) (C,B) (C,C) (C,D) (C,E) 
(D,A) (D,B) (D,C) (D,D) (D,E) 
(E,A) (E,B) (E,C) (E,D) (E,E) 

以A作为中间顶点，替换路径如下：
(B,C)路径长度50，替换为(B,A),(A,C)路径长度33554430？否
(B,D)路径长度40，替换为(B,A),(A,D)路径长度16777245？否
(B,E)路径长度16777215，替换为(B,A),(A,E)路径长度16777314？否
(C,B)路径长度16777215，替换为(C,A),(A,B)路径长度16777225？否
(C,D)路径长度16777215，替换为(C,A),(A,D)路径长度16777245？否
(C,E)路径长度10，替换为(C,A),(A,E)路径长度16777314？否
(D,B)路径长度16777215，替换为(D,A),(A,B)路径长度16777225？否
(D,C)路径长度20，替换为(D,A),(A,C)路径长度33554430？否
(D,E)路径长度60，替换为(D,A),(A,E)路径长度16777314？否
(E,B)路径长度16777215，替换为(E,A),(A,B)路径长度16777225？否
(E,C)路径长度16777215，替换为(E,A),(A,C)路径长度33554430？否
(E,D)路径长度16777215，替换为(E,A),(A,D)路径长度16777245？否
dist：
     0    10     ∞    30    99
     ∞     0    50    40     ∞
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    60
     ∞     ∞     ∞     ∞     0
path：
    -1     0    -1     0     0
    -1    -1     1     1    -1
    -1    -1    -1    -1     2
    -1    -1     3    -1     3
    -1    -1    -1    -1    -1
路径矩阵：
(A,A) (A,B) (A,C) (A,D) (A,E) 
(B,A) (B,B) (B,C) (B,D) (B,E) 
(C,A) (C,B) (C,C) (C,D) (C,E) 
(D,A) (D,B) (D,C) (D,D) (D,E) 
(E,A) (E,B) (E,C) (E,D) (E,E) 

以B作为中间顶点，替换路径如下：
(A,C)路径长度16777215，替换为(A,B),(B,C)路径长度60？是，d02=60，p02=1
(A,D)路径长度30，替换为(A,B),(B,D)路径长度50？否
(A,E)路径长度99，替换为(A,B),(B,E)路径长度16777225？否
(C,A)路径长度16777215，替换为(C,B),(B,A)路径长度33554430？否
(C,D)路径长度16777215，替换为(C,B),(B,D)路径长度16777255？否
(C,E)路径长度10，替换为(C,B),(B,E)路径长度33554430？否
(D,A)路径长度16777215，替换为(D,B),(B,A)路径长度33554430？否
(D,C)路径长度20，替换为(D,B),(B,C)路径长度16777265？否
(D,E)路径长度60，替换为(D,B),(B,E)路径长度33554430？否
(E,A)路径长度16777215，替换为(E,B),(B,A)路径长度33554430？否
(E,C)路径长度16777215，替换为(E,B),(B,C)路径长度16777265？否
(E,D)路径长度16777215，替换为(E,B),(B,D)路径长度16777255？否
dist：
     0    10    60    30    99
     ∞     0    50    40     ∞
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    60
     ∞     ∞     ∞     ∞     0
path：
    -1     0     1     0     0
    -1    -1     1     1    -1
    -1    -1    -1    -1     2
    -1    -1     3    -1     3
    -1    -1    -1    -1    -1
路径矩阵：
(A,A) (A,B) (A,B,C) (A,D) (A,E) 
(B,A) (B,B) (B,C) (B,D) (B,E) 
(C,A) (C,B) (C,C) (C,D) (C,E) 
(D,A) (D,B) (D,C) (D,D) (D,E) 
(E,A) (E,B) (E,C) (E,D) (E,E) 

以C作为中间顶点，替换路径如下：
(A,B)路径长度10，替换为(A,B,C),(C,B)路径长度16777275？否
(A,D)路径长度30，替换为(A,B,C),(C,D)路径长度16777275？否
(A,E)路径长度99，替换为(A,B,C),(C,E)路径长度70？是，d04=70，p04=2
(B,A)路径长度16777215，替换为(B,C),(C,A)路径长度16777265？否
(B,D)路径长度40，替换为(B,C),(C,D)路径长度16777265？否
(B,E)路径长度16777215，替换为(B,C),(C,E)路径长度60？是，d14=60，p14=2
(D,A)路径长度16777215，替换为(D,C),(C,A)路径长度16777235？否
(D,B)路径长度16777215，替换为(D,C),(C,B)路径长度16777235？否
(D,E)路径长度60，替换为(D,C),(C,E)路径长度30？是，d34=30，p34=2
(E,A)路径长度16777215，替换为(E,C),(C,A)路径长度33554430？否
(E,B)路径长度16777215，替换为(E,C),(C,B)路径长度33554430？否
(E,D)路径长度16777215，替换为(E,C),(C,D)路径长度33554430？否
dist：
     0    10    60    30    70
     ∞     0    50    40    60
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    30
     ∞     ∞     ∞     ∞     0
path：
    -1     0     1     0     2
    -1    -1     1     1     2
    -1    -1    -1    -1     2
    -1    -1     3    -1     2
    -1    -1    -1    -1    -1
路径矩阵：
(A,A) (A,B) (A,B,C) (A,D) (A,B,C,E) 
(B,A) (B,B) (B,C) (B,D) (B,C,E) 
(C,A) (C,B) (C,C) (C,D) (C,E) 
(D,A) (D,B) (D,C) (D,D) (D,C,E) 
(E,A) (E,B) (E,C) (E,D) (E,E) 

以D作为中间顶点，替换路径如下：
(A,B)路径长度10，替换为(A,D),(D,B)路径长度16777245？否
(A,B,C)路径长度60，替换为(A,D),(D,C)路径长度50？是，d02=50，p02=3
(A,D,C,E)路径长度70，替换为(A,D),(D,C,E)路径长度60？是，d04=60，p04=2
(B,A)路径长度16777215，替换为(B,D),(D,A)路径长度16777255？否
(B,C)路径长度50，替换为(B,D),(D,C)路径长度60？否
(B,C,E)路径长度60，替换为(B,D),(D,C,E)路径长度70？否
(C,A)路径长度16777215，替换为(C,D),(D,A)路径长度33554430？否
(C,B)路径长度16777215，替换为(C,D),(D,B)路径长度33554430？否
(C,E)路径长度10，替换为(C,D),(D,C,E)路径长度16777245？否
(E,A)路径长度16777215，替换为(E,D),(D,A)路径长度33554430？否
(E,B)路径长度16777215，替换为(E,D),(D,B)路径长度33554430？否
(E,C)路径长度16777215，替换为(E,D),(D,C)路径长度16777235？否
dist：
     0    10    50    30    60
     ∞     0    50    40    60
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    30
     ∞     ∞     ∞     ∞     0
path：
    -1     0     3     0     2
    -1    -1     1     1     2
    -1    -1    -1    -1     2
    -1    -1     3    -1     2
    -1    -1    -1    -1    -1
路径矩阵：
(A,A) (A,B) (A,D,C) (A,D) (A,D,C,E) 
(B,A) (B,B) (B,C) (B,D) (B,C,E) 
(C,A) (C,B) (C,C) (C,D) (C,E) 
(D,A) (D,B) (D,C) (D,D) (D,C,E) 
(E,A) (E,B) (E,C) (E,D) (E,E) 

以E作为中间顶点，替换路径如下：
(A,B)路径长度10，替换为(A,D,C,E),(E,B)路径长度16777275？否
(A,D,C)路径长度50，替换为(A,D,C,E),(E,C)路径长度16777275？否
(A,D)路径长度30，替换为(A,D,C,E),(E,D)路径长度16777275？否
(B,A)路径长度16777215，替换为(B,C,E),(E,A)路径长度16777275？否
(B,C)路径长度50，替换为(B,C,E),(E,C)路径长度16777275？否
(B,D)路径长度40，替换为(B,C,E),(E,D)路径长度16777275？否
(C,A)路径长度16777215，替换为(C,E),(E,A)路径长度16777225？否
(C,B)路径长度16777215，替换为(C,E),(E,B)路径长度16777225？否
(C,D)路径长度16777215，替换为(C,E),(E,D)路径长度16777225？否
(D,A)路径长度16777215，替换为(D,C,E),(E,A)路径长度16777245？否
(D,B)路径长度16777215，替换为(D,C,E),(E,B)路径长度16777245？否
(D,C)路径长度20，替换为(D,C,E),(E,C)路径长度16777245？否
dist：
     0    10    50    30    60
     ∞     0    50    40    60
     ∞     ∞     0     ∞    10
     ∞     ∞    20     0    30
     ∞     ∞     ∞     ∞     0
path：
    -1     0     3     0     2
    -1    -1     1     1     2
    -1    -1    -1    -1     2
    -1    -1     3    -1     2
    -1    -1    -1    -1    -1
路径矩阵：
(A,A) (A,B) (A,D,C) (A,D) (A,D,C,E) 
(B,A) (B,B) (B,C) (B,D) (B,C,E) 
(C,A) (C,B) (C,C) (C,D) (C,E) 
(D,A) (D,B) (D,C) (D,D) (D,C,E) 
(E,A) (E,B) (E,C) (E,D) (E,E) 

每对顶点间的最短路径如下：
(A,B)长度10，(A,D,C)长度50，(A,D)长度30，(A,D,C,E)长度60，
(B,A)长度∞，(B,C)长度50，(B,D)长度40，(B,C,E)长度60，
(C,A)长度∞，(C,B)长度∞，(C,D)长度∞，(C,E)长度10，
(D,A)长度∞，(D,B)长度∞，(D,C)长度20，(D,C,E)长度30，
(E,A)长度∞，(E,B)长度∞，(E,C)长度∞，(E,D)长度∞，
*/
//@author：Yeheya。2014年8月9日，2015-11-15，2016-2-14，2019年10月27日